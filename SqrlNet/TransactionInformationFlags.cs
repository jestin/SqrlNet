using System;

namespace SqrlNet
{
	/// <summary>
	/// The Transaction Information Flags (TIF) is a single hexadecimal encoded
	/// integer generated by the web server to convey a wide variety of user
	/// account and connection status information in an easily generated and
	/// easily interpreted form.
	/// </summary>
	[Flags]
	public enum TransactionInformationFlags
	{
		/// <summary>
		/// (Current) ID match: When set, this bit indicates that the web server
		/// has found an identity association for the user based upon the default
		/// (current) identity credentials supplied by the client: the IDentity
		/// Key (IDK) and the IDentity Signature (IDS).
		/// </summary>
		IdMatch = 1,

		/// <summary>
		/// Previous ID match: When set, this bit indicates that the web server
		/// has found an identity association for the user based upon the
		/// previous identity credentials supplied by the client: the previous
		/// IDentity Key (pIDK) and the previous IDentity Signature (pIDS).
		/// Note: When neither of the ID match bits are set, none of the identity
		/// credentials supplied by the client are known to the web server.
		/// </summary>
		PreviousIdMatch = 1 << 1,

		/// <summary>
		/// IPs matched: When set, this bit indicates that the IP address of the
		/// entity which requested the initial logon web page containing the SQRL
		/// link URL (and probably encoded into the SQRL link URL's “nut”) is the
		/// same IP address from which the SQRL client's query was received for
		/// this reply.
		/// </summary>
		IpMatch = 1 << 2,

		/// <summary>
		/// SQRL enabled: When set, the account associated with the identified user
		/// is enabled for SQRL-initiated login. This is the normal default case, so
		/// this bit will be set unless a “disable” command (see below) has most
		/// recently been received from the identified user.
		/// </summary>
		SqrlEnabled = 1 << 3,

		/// <summary>
		/// User logged in: When set, the account associated with the identified user
		/// has one or more active logged in sessions. In the typical case, this bit
		/// would be cleared in the first status-collection client query and set in
		/// the reply to a subsequent successful query containing any of the login
		/// commands. If it was set before the receipt of a successful logout
		/// command, it would then be reset.
		/// </summary>
		UserLoggedIn = 1 << 4,

		/// <summary>
		/// SQRL account creation allowed: When set, the website is indicating that it
		/// supports SQRL-initiated, anonymous account creation. If the SQRL client
		/// received a reply with this bit set, and the user was not already known to
		/// the server, and the user affirmatively indicated that they wished to create
		/// an account using their SQRL credentials, the client could then issue a
		/// “create” command, probably accompanied with one of the login commands, to
		/// create an account and login the user.
		/// </summary>
		SqrlAccountCreationAllowed = 1 << 5,

		/// <summary>
		/// Command failed: When set, this bit indicates that the web server had an
		/// unspecified problem fully processing the client's query. In any such case,
		/// no change will be made to the user's account status. All SQRL server-side
		/// actions are atomic. This means that either everything succeeds or nothing
		/// is changed. This is important since clients can request multiple updates
		/// and changes at once.  With the exception of the following “SQRL failure”
		/// status bit, the SQRL semantics do not attempt to enumerate every conceivable
		/// web server failure reason. The web server is free to use the “ask” command
		/// without arguments to explain the problem to the client's user.
		/// </summary>
		CommandFailed = 1 << 6,

		/// <summary>
		/// SQRL failure: This bit only has meaning when the preceding “Command failed”
		/// bit is set. When both bits are set, the web server in indicating that the
		/// reason for the command failure indicated by that bit was some failure in
		/// the SQRL protocol sent by the client and not a problem at its end with
		/// completing the requested command(s). Since the SQRL client will have
		/// previously obtained everything from the client which is necessary to
		/// formulate valid and legal command queries, this bit should never be expected
		/// to be set. So it would typically indicate a logical problem with either the
		/// web server of the client, a transmission error, or the presence of
		/// third-party tampering.
		/// </summary>
		SqrlFailure = 1 << 7
	}
}